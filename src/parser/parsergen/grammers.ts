import C = require("typescript-collections");

export class LRTerm {
    private rule: Rule;
    private index: number = 0;
    private ahead: TSymbol;

    constructor(rule: Rule, ahead: TSymbol) {
        this.rule = rule;
        this.ahead = ahead;
    }

    /**
     * For typpescript-collections.
     */
    public toString() {
        return C.util.makeString(this);
    }

    public getRule(): Rule {
        return this.rule;
    }

    public getAhead(): TSymbol {
        return this.ahead;
    }

    public proceed(): LRTerm {
        const t = new LRTerm(this.rule, this.ahead);
        const max = this.rule.getRhs().length;
        t.index = (this.index < max) ? this.index + 1 : this.index;
        return t;
    }

    /** return 'undefined' if dot is on the end. */
    public getNextSymbol(): GSymbol {
        return this.rule.getRhs()[this.index];
    }

    /** return 'undefined' if dot is on the end. */
    public getSecondeNextSymbol(): GSymbol {
        return this.rule.getRhs()[this.index + 1];
    }

    public getString() {
        let str: string = "[".concat(this.rule.getLhs().getSymbolStr().toString())
            .concat(" -> ");
        const rhs: GSymbol[] = this.rule.getRhs();
        for (let i = 0; i < rhs.length; i++) {
            const sym: string = rhs[i].getSymbolStr().toString();
            str = (i === this.index)
                ? str.concat(".").concat(sym)
                : str.concat(" ").concat(sym);
        }
        if (this.index === rhs.length)
            str = str.concat(".");
        str = str.concat(", ").concat(this.ahead.getSymbolStr()).concat("]");
        return str;
    }

    public equals(o: any): boolean {
        if (!(o instanceof LRTerm)) return false;
        const t = o as LRTerm;
        // since rule instances are unique.
        if (this.rule !== t.rule) return false;
        if (this.index !== t.index) return false;
        return true;
    }
}

export class Rule {
    private lhs: NTSymbol;
    private rhs: GSymbol[];

    constructor(lhs: NTSymbol, rhs: GSymbol[]) {
        this.lhs = lhs;
        this.rhs = rhs;
    }

    public getString(): string {
        return this.lhs.getSymbolStr()
            + " -> "
            + this.rhs.map((sym: GSymbol) => sym.getSymbolStr().toString()).join(" ");
    }

    public getLhs(): NTSymbol {
        return this.lhs;
    }

    public getRhs(): GSymbol[] {
        return this.rhs;
    }

    public toString() {
        return C.util.makeString(this);
    }
}

export abstract class GSymbol {
    private sym: string;

    constructor(sym: string) {
        this.sym = sym;
    }

    public getSymbolStr(): string {
        return this.sym;
    }

    public toString() {
        return C.util.makeString(this);
    }
}

export class NTSymbol extends GSymbol {
    constructor(sym: string) {
        super(sym);
    }
}

export class TSymbol extends GSymbol {
    constructor(sym: string) {
        super(sym);
    }
}

export class EntryNTSymbol extends NTSymbol {
    constructor() {
        super("^");
    }
}

export class ExitTSymbol extends TSymbol {
    constructor() {
        super("$");
    }
}

export enum ActionKind {
    Shift,
    Reduce,
    Accepted,
}

export class Action {
    public readonly kind: ActionKind;
    public readonly n: number;
    /**
     * @param kind is a kind of the action.
     * @param n is a target state when Shift,
     *          is a rule index when Reduce,
     *          is 0 when Accepted.
     */
    constructor(kind: ActionKind, n: number) {
        this.kind = kind;
        this.n = n;
    }
}

export class Grammer {

    public static defaultGrammer(): Rule[] {
        return [
            new Rule(N("E"), [N("E"), T("+"), N("T")]),
            new Rule(N("E"), [N("E"), T("-"), N("T")]),
            new Rule(N("E"), [N("T")]),

            new Rule(N("EE"), [N("EE"), T(","), N("E")]),
            new Rule(N("EE"), [N("E")]),

            new Rule(N("T"), [N("T"), T("*"), N("G")]),
            new Rule(N("T"), [N("T"), T("/"), N("G")]),
            new Rule(N("T"), [N("G")]),

            new Rule(N("G"), [T("("), N("E"), T(")")]),
            new Rule(N("G"), [T("I")]),
            new Rule(N("G"), [T("X")]),
            new Rule(N("G"), [N("E"), T(">"), N("E")]),
            new Rule(N("G"), [N("E"), T("=="), N("E")]),
            new Rule(N("G"), [T("input")]),
            new Rule(N("G"), [T("X"), T("("), N("EE"), T(")")]),
            new Rule(N("G"), [T("X"), T("("), T(")")]),
            new Rule(N("G"), [T("("), N("E"), T(")"), T("("), N("EE"), T(")")]),
            new Rule(N("G"), [T("("), N("E"), T(")"), T("("), T(")")]),
            new Rule(N("G"), [T("alloc")]),
            new Rule(N("G"), [T("&"), T("X")]),
            new Rule(N("G"), [T("*"), N("E")]),
            new Rule(N("G"), [T("null")]),

            new Rule(N("S"), [T("X"), T("="), N("E"), T(";")]),
            new Rule(N("S"), [T("output"), N("E"), T(";")]),
            new Rule(N("S"), [T("if"), T("("), N("E"), T(")"), T("{"), N("SS"), T("}")]),
            new Rule(N("S"), [T("if"), T("("), N("E"), T(")"), T("{"), N("SS"), T("}"),
            T("else"), T("{"), N("SS"), T("}")]),
            new Rule(N("S"), [T("while"), T("("), N("E"), T(")"), T("{"), N("SS"), T("}")]),
            new Rule(N("S"), [T("*"), T("X"), T("="), N("E"), T(";")]),

            new Rule(N("SS"), [N("SS"), N("S")]),
            new Rule(N("SS"), [N("S")]),

            new Rule(N("F"), [T("X"), T("("), N("XX"), T(")"), T("{"), N("SS"), T("return"), N("E"), T(";"), T("}")]),
            new Rule(N("F"), [T("X"), T("("), T(")"), T("{"), N("SS"), T("return"), N("E"), T(";"), T("}")]),
            new Rule(N("F"), [N("X"), T("("), N("XX"), T(")")
                , T("{"), T("var"), N("XX"), T(";"), N("SS"), T("return"), N("E"), T(";"), T("}")]),
            new Rule(N("F"), [N("X"), T("("), T(")")
                , T("{"), T("var"), N("XX"), T(";"), N("SS"), T("return"), N("E"), T(";"), T("}")]),

            new Rule(N("XX"), [N("XX"), T(","), T("X")]),
            new Rule(N("XX"), [T("X")]),

            new Rule(N("P"), [N("P"), N("F")]),
            new Rule(N("P"), [N("F")]),

            new Rule(new EntryNTSymbol(), [N("P")]),
        ];

        function N(str: string) {
            return new NTSymbol(str);
        }

        function T(str: string) {
            return new TSymbol(str);
        }
    }

    public static loadDefaultActions(): C.Dictionary<[number, TSymbol], Action> {
        let actions = new C.Dictionary<[number, TSymbol], Action>();
        let s = (state: number, symStr: string, actType: number, actNum: number) => {
            actions.setValue([state, new TSymbol(symStr)], new Action(actType, actNum));
        };
        // hard coding of transitions.
        s(24, "+", 0, 45); s(44, "+", 0, 45); s(52, "+", 1, 20); s(54, "+", 0, 96); s(67, "+", 0, 96); s(68, "+", 0, 45); s(69, "+", 0, 96); s(74, "+", 0, 45); s(76, "+", 0, 129); s(88, "+", 1, 11); s(89, "+", 1, 12); s(90, "+", 0, 129); s(103, "+", 1, 20); s(105, "+", 0, 96); s(108, "+", 0, 167); s(126, "+", 0, 45); s(135, "+", 1, 20); s(137, "+", 0, 96); s(144, "+", 0, 129); s(157, "+", 1, 11); s(158, "+", 1, 12); s(159, "+", 0, 129); s(175, "+", 1, 20); s(177, "+", 0, 96); s(186, "+", 0, 129); s(198, "+", 1, 11); s(199, "+", 1, 12); s(213, "+", 1, 20); s(215, "+", 0, 96); s(224, "+", 0, 129); s(236, "+", 1, 11); s(237, "+", 1, 12); s(238, "+", 0, 129); s(241, "+", 0, 167); s(255, "+", 0, 45); s(260, "+", 1, 20); s(262, "+", 0, 96); s(269, "+", 1, 11); s(270, "+", 1, 12); s(285, "+", 1, 20); s(287, "+", 0, 96); s(296, "+", 0, 45); s(303, "+", 0, 45); s(304, "+", 1, 11); s(305, "+", 1, 12); s(318, "+", 1, 11); s(319, "+", 1, 12); s(330, "+", 0, 45); s(332, "+", 0, 96); s(334, "+", 0, 96); s(349, "+", 0, 45); s(24, "-", 0, 46); s(44, "-", 0, 46); s(52, "-", 1, 20); s(54, "-", 0, 97); s(67, "-", 0, 97); s(68, "-", 0, 46); s(69, "-", 0, 97); s(74, "-", 0, 46); s(76, "-", 0, 130); s(88, "-", 1, 11); s(89, "-", 1, 12); s(90, "-", 0, 130); s(103, "-", 1, 20); s(105, "-", 0, 97); s(108, "-", 0, 168); s(126, "-", 0, 46); s(135, "-", 1, 20); s(137, "-", 0, 97); s(144, "-", 0, 130); s(157, "-", 1, 11); s(158, "-", 1, 12); s(159, "-", 0, 130); s(175, "-", 1, 20); s(177, "-", 0, 97); s(186, "-", 0, 130); s(198, "-", 1, 11); s(199, "-", 1, 12); s(213, "-", 1, 20); s(215, "-", 0, 97); s(224, "-", 0, 130); s(236, "-", 1, 11); s(237, "-", 1, 12); s(238, "-", 0, 130); s(241, "-", 0, 168); s(255, "-", 0, 46); s(260, "-", 1, 20); s(262, "-", 0, 97); s(269, "-", 1, 11); s(270, "-", 1, 12); s(285, "-", 1, 20); s(287, "-", 0, 97); s(296, "-", 0, 46); s(303, "-", 0, 46); s(304, "-", 1, 11); s(305, "-", 1, 12); s(318, "-", 1, 11); s(319, "-", 1, 12); s(330, "-", 0, 46); s(332, "-", 0, 97); s(334, "-", 0, 97); s(349, "-", 0, 46); s(8, ",", 0, 10); s(40, ",", 0, 70); s(73, ",", 0, 70); s(110, ",", 0, 173); s(165, ",", 0, 173); s(205, ",", 0, 173); s(218, ",", 0, 173); s(245, ",", 0, 173); s(276, ",", 0, 173); s(279, ",", 0, 173); s(309, ",", 0, 173); s(311, ",", 0, 173); s(325, ",", 0, 173); s(327, ",", 0, 173); s(342, ",", 0, 173); s(355, ",", 0, 173); s(358, ",", 0, 173); s(9, "*", 0, 12); s(14, "*", 0, 26); s(16, "*", 0, 12); s(21, "*", 0, 12); s(23, "*", 0, 26); s(25, "*", 0, 50); s(26, "*", 0, 26); s(28, "*", 0, 56); s(35, "*", 0, 56); s(37, "*", 0, 26); s(38, "*", 0, 56); s(41, "*", 0, 12); s(43, "*", 0, 26); s(45, "*", 0, 78); s(46, "*", 0, 78); s(47, "*", 0, 26); s(48, "*", 0, 26); s(50, "*", 0, 26); s(51, "*", 0, 26); s(53, "*", 1, 2); s(55, "*", 0, 101); s(56, "*", 0, 56); s(58, "*", 0, 56); s(65, "*", 0, 111); s(71, "*", 0, 12); s(72, "*", 0, 26); s(77, "*", 0, 133); s(78, "*", 0, 78); s(80, "*", 0, 56); s(87, "*", 0, 133); s(91, "*", 0, 140); s(94, "*", 0, 26); s(95, "*", 0, 26); s(96, "*", 0, 146); s(97, "*", 0, 146); s(99, "*", 0, 56); s(100, "*", 0, 56); s(101, "*", 0, 56); s(102, "*", 0, 56); s(104, "*", 1, 2); s(106, "*", 0, 111); s(109, "*", 0, 171); s(111, "*", 0, 111); s(113, "*", 0, 56); s(125, "*", 0, 12); s(127, "*", 0, 12); s(129, "*", 0, 188); s(130, "*", 0, 188); s(131, "*", 0, 78); s(132, "*", 0, 78); s(133, "*", 0, 78); s(134, "*", 0, 78); s(136, "*", 1, 2); s(138, "*", 0, 111); s(140, "*", 0, 188); s(141, "*", 0, 188); s(142, "*", 1, 0); s(143, "*", 1, 1); s(145, "*", 0, 211); s(146, "*", 0, 146); s(148, "*", 0, 56); s(155, "*", 0, 211); s(156, "*", 0, 111); s(162, "*", 0, 56); s(163, "*", 0, 56); s(167, "*", 0, 226); s(168, "*", 0, 226); s(169, "*", 0, 111); s(170, "*", 0, 111); s(171, "*", 0, 111); s(172, "*", 0, 111); s(173, "*", 0, 111); s(176, "*", 1, 2); s(178, "*", 0, 111); s(180, "*", 0, 247); s(182, "*", 0, 247); s(183, "*", 0, 26); s(185, "*", 0, 12); s(187, "*", 0, 140); s(188, "*", 0, 188); s(190, "*", 0, 56); s(197, "*", 0, 140); s(202, "*", 0, 78); s(203, "*", 0, 78); s(209, "*", 0, 146); s(210, "*", 0, 146); s(211, "*", 0, 146); s(212, "*", 0, 146); s(214, "*", 1, 2); s(216, "*", 0, 111); s(220, "*", 1, 0); s(221, "*", 1, 1); s(222, "*", 0, 111); s(225, "*", 0, 283); s(226, "*", 0, 226); s(228, "*", 0, 56); s(235, "*", 0, 283); s(242, "*", 0, 111); s(243, "*", 0, 111); s(249, "*", 0, 26); s(251, "*", 0, 247); s(254, "*", 0, 247); s(257, "*", 0, 26); s(258, "*", 0, 188); s(259, "*", 0, 188); s(261, "*", 1, 2); s(263, "*", 0, 111); s(265, "*", 1, 0); s(266, "*", 1, 1); s(267, "*", 0, 111); s(273, "*", 0, 146); s(274, "*", 0, 146); s(281, "*", 0, 226); s(282, "*", 0, 226); s(283, "*", 0, 226); s(284, "*", 0, 226); s(286, "*", 1, 2); s(288, "*", 0, 111); s(290, "*", 1, 0); s(291, "*", 1, 1); s(292, "*", 0, 111); s(295, "*", 0, 26); s(297, "*", 0, 56); s(300, "*", 0, 56); s(306, "*", 0, 188); s(307, "*", 0, 188); s(313, "*", 1, 0); s(314, "*", 1, 1); s(315, "*", 0, 111); s(322, "*", 0, 226); s(323, "*", 0, 226); s(329, "*", 0, 26); s(337, "*", 1, 0); s(338, "*", 1, 1); s(339, "*", 0, 111); s(344, "*", 1, 0); s(345, "*", 1, 1); s(346, "*", 0, 111); s(352, "*", 0, 247); s(361, "*", 0, 247); s(362, "*", 0, 247); s(363, "*", 0, 247); s(366, "*", 0, 247); s(368, "*", 0, 247); s(372, "*", 0, 247); s(373, "*", 0, 247); s(25, "/", 0, 51); s(53, "/", 1, 2); s(55, "/", 0, 102); s(77, "/", 0, 134); s(87, "/", 0, 134); s(91, "/", 0, 141); s(104, "/", 1, 2); s(109, "/", 0, 172); s(136, "/", 1, 2); s(142, "/", 1, 0); s(143, "/", 1, 1); s(145, "/", 0, 212); s(155, "/", 0, 212); s(176, "/", 1, 2); s(187, "/", 0, 141); s(197, "/", 0, 141); s(214, "/", 1, 2); s(220, "/", 1, 0); s(221, "/", 1, 1); s(225, "/", 0, 284); s(235, "/", 0, 284); s(261, "/", 1, 2); s(265, "/", 1, 0); s(266, "/", 1, 1); s(286, "/", 1, 2); s(290, "/", 1, 0); s(291, "/", 1, 1); s(313, "/", 1, 0); s(314, "/", 1, 1); s(337, "/", 1, 0); s(338, "/", 1, 1); s(344, "/", 1, 0); s(345, "/", 1, 1); s(1, "(", 0, 4); s(14, "(", 0, 28); s(15, "(", 0, 35); s(17, "(", 0, 38); s(23, "(", 0, 28); s(26, "(", 0, 28); s(28, "(", 0, 58); s(30, "(", 0, 65); s(35, "(", 0, 58); s(37, "(", 0, 28); s(38, "(", 0, 58); s(43, "(", 0, 28); s(45, "(", 0, 80); s(46, "(", 0, 80); s(47, "(", 0, 28); s(48, "(", 0, 28); s(50, "(", 0, 28); s(51, "(", 0, 28); s(56, "(", 0, 58); s(58, "(", 0, 58); s(60, "(", 0, 106); s(65, "(", 0, 113); s(72, "(", 0, 28); s(78, "(", 0, 80); s(80, "(", 0, 58); s(82, "(", 0, 138); s(94, "(", 0, 28); s(95, "(", 0, 28); s(96, "(", 0, 148); s(97, "(", 0, 148); s(98, "(", 0, 156); s(99, "(", 0, 58); s(100, "(", 0, 58); s(101, "(", 0, 58); s(102, "(", 0, 58); s(106, "(", 0, 113); s(111, "(", 0, 113); s(113, "(", 0, 58); s(116, "(", 0, 178); s(129, "(", 0, 190); s(130, "(", 0, 190); s(131, "(", 0, 80); s(132, "(", 0, 80); s(133, "(", 0, 80); s(134, "(", 0, 80); s(138, "(", 0, 113); s(140, "(", 0, 190); s(141, "(", 0, 190); s(146, "(", 0, 148); s(148, "(", 0, 58); s(150, "(", 0, 216); s(156, "(", 0, 113); s(162, "(", 0, 58); s(163, "(", 0, 58); s(164, "(", 0, 222); s(167, "(", 0, 228); s(168, "(", 0, 228); s(169, "(", 0, 113); s(170, "(", 0, 113); s(171, "(", 0, 113); s(172, "(", 0, 113); s(173, "(", 0, 113); s(178, "(", 0, 113); s(183, "(", 0, 28); s(188, "(", 0, 190); s(190, "(", 0, 58); s(192, "(", 0, 263); s(202, "(", 0, 80); s(203, "(", 0, 80); s(204, "(", 0, 267); s(209, "(", 0, 148); s(210, "(", 0, 148); s(211, "(", 0, 148); s(212, "(", 0, 148); s(216, "(", 0, 113); s(222, "(", 0, 113); s(226, "(", 0, 228); s(228, "(", 0, 58); s(230, "(", 0, 288); s(242, "(", 0, 113); s(243, "(", 0, 113); s(244, "(", 0, 292); s(249, "(", 0, 28); s(250, "(", 0, 297); s(252, "(", 0, 300); s(257, "(", 0, 28); s(258, "(", 0, 190); s(259, "(", 0, 190); s(263, "(", 0, 113); s(267, "(", 0, 113); s(273, "(", 0, 148); s(274, "(", 0, 148); s(275, "(", 0, 315); s(281, "(", 0, 228); s(282, "(", 0, 228); s(283, "(", 0, 228); s(284, "(", 0, 228); s(288, "(", 0, 113); s(292, "(", 0, 113); s(295, "(", 0, 28); s(297, "(", 0, 58); s(300, "(", 0, 58); s(306, "(", 0, 190); s(307, "(", 0, 190); s(308, "(", 0, 339); s(315, "(", 0, 113); s(322, "(", 0, 228); s(323, "(", 0, 228); s(324, "(", 0, 346); s(329, "(", 0, 28); s(339, "(", 0, 113); s(346, "(", 0, 113); s(4, ")", 0, 6); s(8, ")", 0, 11); s(54, ")", 0, 98); s(65, ")", 0, 114); s(67, ")", 0, 121); s(69, ")", 0, 123); s(105, ")", 0, 164); s(106, ")", 0, 166); s(110, ")", 0, 174); s(137, ")", 0, 204); s(138, ")", 0, 206); s(156, ")", 0, 219); s(165, ")", 0, 223); s(177, ")", 0, 244); s(178, ")", 0, 246); s(205, ")", 0, 268); s(215, ")", 0, 275); s(216, ")", 0, 277); s(218, ")", 0, 278); s(222, ")", 0, 280); s(245, ")", 0, 293); s(262, ")", 0, 308); s(263, ")", 0, 310); s(267, ")", 0, 312); s(276, ")", 0, 316); s(279, ")", 0, 317); s(287, ")", 0, 324); s(288, ")", 0, 326); s(292, ")", 0, 328); s(309, ")", 0, 340); s(311, ")", 0, 341); s(315, ")", 0, 343); s(325, ")", 0, 347); s(327, ")", 0, 348); s(332, ")", 0, 351); s(334, ")", 0, 353); s(339, ")", 0, 356); s(342, ")", 0, 357); s(346, ")", 0, 359); s(355, ")", 0, 364); s(358, ")", 0, 365); s(14, "I", 0, 29); s(23, "I", 0, 29); s(26, "I", 0, 29); s(28, "I", 0, 59); s(35, "I", 0, 59); s(37, "I", 0, 29); s(38, "I", 0, 59); s(43, "I", 0, 29); s(45, "I", 0, 81); s(46, "I", 0, 81); s(47, "I", 0, 29); s(48, "I", 0, 29); s(50, "I", 0, 29); s(51, "I", 0, 29); s(56, "I", 0, 59); s(58, "I", 0, 59); s(65, "I", 0, 115); s(72, "I", 0, 29); s(78, "I", 0, 81); s(80, "I", 0, 59); s(94, "I", 0, 29); s(95, "I", 0, 29); s(96, "I", 0, 149); s(97, "I", 0, 149); s(99, "I", 0, 59); s(100, "I", 0, 59); s(101, "I", 0, 59); s(102, "I", 0, 59); s(106, "I", 0, 115); s(111, "I", 0, 115); s(113, "I", 0, 59); s(129, "I", 0, 191); s(130, "I", 0, 191); s(131, "I", 0, 81); s(132, "I", 0, 81); s(133, "I", 0, 81); s(134, "I", 0, 81); s(138, "I", 0, 115); s(140, "I", 0, 191); s(141, "I", 0, 191); s(146, "I", 0, 149); s(148, "I", 0, 59); s(156, "I", 0, 115); s(162, "I", 0, 59); s(163, "I", 0, 59); s(167, "I", 0, 229); s(168, "I", 0, 229); s(169, "I", 0, 115); s(170, "I", 0, 115); s(171, "I", 0, 115); s(172, "I", 0, 115); s(173, "I", 0, 115); s(178, "I", 0, 115); s(183, "I", 0, 29); s(188, "I", 0, 191); s(190, "I", 0, 59); s(202, "I", 0, 81); s(203, "I", 0, 81); s(209, "I", 0, 149); s(210, "I", 0, 149); s(211, "I", 0, 149); s(212, "I", 0, 149); s(216, "I", 0, 115); s(222, "I", 0, 115); s(226, "I", 0, 229); s(228, "I", 0, 59); s(242, "I", 0, 115); s(243, "I", 0, 115); s(249, "I", 0, 29); s(257, "I", 0, 29); s(258, "I", 0, 191); s(259, "I", 0, 191); s(263, "I", 0, 115); s(267, "I", 0, 115); s(273, "I", 0, 149); s(274, "I", 0, 149); s(281, "I", 0, 229); s(282, "I", 0, 229); s(283, "I", 0, 229); s(284, "I", 0, 229); s(288, "I", 0, 115); s(292, "I", 0, 115); s(295, "I", 0, 29); s(297, "I", 0, 59); s(300, "I", 0, 59); s(306, "I", 0, 191); s(307, "I", 0, 191); s(315, "I", 0, 115); s(322, "I", 0, 229); s(323, "I", 0, 229); s(329, "I", 0, 29); s(339, "I", 0, 115); s(346, "I", 0, 115); s(0, "X", 0, 1); s(2, "X", 0, 1); s(4, "X", 0, 7); s(9, "X", 0, 13); s(10, "X", 0, 20); s(12, "X", 0, 22); s(14, "X", 0, 30); s(16, "X", 0, 13); s(19, "X", 0, 39); s(21, "X", 0, 13); s(23, "X", 0, 30); s(26, "X", 0, 30); s(28, "X", 0, 60); s(33, "X", 0, 66); s(35, "X", 0, 60); s(37, "X", 0, 30); s(38, "X", 0, 60); s(41, "X", 0, 13); s(42, "X", 0, 39); s(43, "X", 0, 30); s(45, "X", 0, 82); s(46, "X", 0, 82); s(47, "X", 0, 30); s(48, "X", 0, 30); s(50, "X", 0, 30); s(51, "X", 0, 30); s(56, "X", 0, 60); s(58, "X", 0, 60); s(63, "X", 0, 107); s(65, "X", 0, 116); s(70, "X", 0, 124); s(71, "X", 0, 13); s(72, "X", 0, 30); s(78, "X", 0, 82); s(80, "X", 0, 60); s(85, "X", 0, 139); s(94, "X", 0, 30); s(95, "X", 0, 30); s(96, "X", 0, 150); s(97, "X", 0, 150); s(99, "X", 0, 60); s(100, "X", 0, 60); s(101, "X", 0, 60); s(102, "X", 0, 60); s(106, "X", 0, 116); s(111, "X", 0, 116); s(113, "X", 0, 60); s(119, "X", 0, 179); s(125, "X", 0, 13); s(127, "X", 0, 13); s(129, "X", 0, 192); s(130, "X", 0, 192); s(131, "X", 0, 82); s(132, "X", 0, 82); s(133, "X", 0, 82); s(134, "X", 0, 82); s(138, "X", 0, 116); s(140, "X", 0, 192); s(141, "X", 0, 192); s(146, "X", 0, 150); s(148, "X", 0, 60); s(153, "X", 0, 217); s(156, "X", 0, 116); s(162, "X", 0, 60); s(163, "X", 0, 60); s(167, "X", 0, 230); s(168, "X", 0, 230); s(169, "X", 0, 116); s(170, "X", 0, 116); s(171, "X", 0, 116); s(172, "X", 0, 116); s(173, "X", 0, 116); s(178, "X", 0, 116); s(180, "X", 0, 248); s(182, "X", 0, 248); s(183, "X", 0, 30); s(185, "X", 0, 13); s(188, "X", 0, 192); s(190, "X", 0, 60); s(195, "X", 0, 264); s(202, "X", 0, 82); s(203, "X", 0, 82); s(209, "X", 0, 150); s(210, "X", 0, 150); s(211, "X", 0, 150); s(212, "X", 0, 150); s(216, "X", 0, 116); s(222, "X", 0, 116); s(226, "X", 0, 230); s(228, "X", 0, 60); s(233, "X", 0, 289); s(242, "X", 0, 116); s(243, "X", 0, 116); s(247, "X", 0, 294); s(249, "X", 0, 30); s(251, "X", 0, 248); s(254, "X", 0, 248); s(257, "X", 0, 30); s(258, "X", 0, 192); s(259, "X", 0, 192); s(263, "X", 0, 116); s(267, "X", 0, 116); s(273, "X", 0, 150); s(274, "X", 0, 150); s(281, "X", 0, 230); s(282, "X", 0, 230); s(283, "X", 0, 230); s(284, "X", 0, 230); s(288, "X", 0, 116); s(292, "X", 0, 116); s(295, "X", 0, 30); s(297, "X", 0, 60); s(300, "X", 0, 60); s(306, "X", 0, 192); s(307, "X", 0, 192); s(315, "X", 0, 116); s(322, "X", 0, 230); s(323, "X", 0, 230); s(329, "X", 0, 30); s(339, "X", 0, 116); s(346, "X", 0, 116); s(352, "X", 0, 248); s(361, "X", 0, 248); s(362, "X", 0, 248); s(363, "X", 0, 248); s(366, "X", 0, 248); s(368, "X", 0, 248); s(372, "X", 0, 248); s(373, "X", 0, 248); s(24, ">", 0, 47); s(44, ">", 0, 47); s(52, ">", 1, 20); s(54, ">", 0, 99); s(67, ">", 0, 99); s(68, ">", 0, 47); s(69, ">", 0, 99); s(74, ">", 0, 47); s(76, ">", 0, 131); s(88, ">", 1, 11); s(89, ">", 1, 12); s(90, ">", 0, 47); s(103, ">", 1, 20); s(105, ">", 0, 99); s(108, ">", 0, 169); s(126, ">", 0, 47); s(135, ">", 1, 20); s(137, ">", 0, 99); s(144, ">", 0, 209); s(157, ">", 1, 11); s(158, ">", 1, 12); s(159, ">", 0, 99); s(175, ">", 1, 20); s(177, ">", 0, 99); s(186, ">", 0, 258); s(198, ">", 1, 11); s(199, ">", 1, 12); s(213, ">", 1, 20); s(215, ">", 0, 99); s(224, ">", 0, 281); s(236, ">", 1, 11); s(237, ">", 1, 12); s(238, ">", 0, 169); s(241, ">", 0, 169); s(255, ">", 0, 47); s(260, ">", 1, 20); s(262, ">", 0, 99); s(269, ">", 1, 11); s(270, ">", 1, 12); s(285, ">", 1, 20); s(287, ">", 0, 99); s(296, ">", 0, 47); s(303, ">", 0, 47); s(304, ">", 1, 11); s(305, ">", 1, 12); s(318, ">", 1, 11); s(319, ">", 1, 12); s(330, ">", 0, 47); s(332, ">", 0, 99); s(334, ">", 0, 99); s(349, ">", 0, 47); s(24, "==", 0, 48); s(44, "==", 0, 48); s(52, "==", 1, 20); s(54, "==", 0, 100); s(67, "==", 0, 100); s(68, "==", 0, 48); s(69, "==", 0, 100); s(74, "==", 0, 48); s(76, "==", 0, 132); s(88, "==", 1, 11); s(89, "==", 1, 12); s(90, "==", 0, 48); s(103, "==", 1, 20); s(105, "==", 0, 100); s(108, "==", 0, 170); s(126, "==", 0, 48); s(135, "==", 1, 20); s(137, "==", 0, 100); s(144, "==", 0, 210); s(157, "==", 1, 11); s(158, "==", 1, 12); s(159, "==", 0, 100); s(175, "==", 1, 20); s(177, "==", 0, 100); s(186, "==", 0, 259); s(198, "==", 1, 11); s(199, "==", 1, 12); s(213, "==", 1, 20); s(215, "==", 0, 100); s(224, "==", 0, 282); s(236, "==", 1, 11); s(237, "==", 1, 12); s(238, "==", 0, 170); s(241, "==", 0, 170); s(255, "==", 0, 48); s(260, "==", 1, 20); s(262, "==", 0, 100); s(269, "==", 1, 11); s(270, "==", 1, 12); s(285, "==", 1, 20); s(287, "==", 0, 100); s(296, "==", 0, 48); s(303, "==", 0, 48); s(304, "==", 1, 11); s(305, "==", 1, 12); s(318, "==", 1, 11); s(319, "==", 1, 12); s(330, "==", 0, 48); s(332, "==", 0, 100); s(334, "==", 0, 100); s(349, "==", 0, 48); s(14, "input", 0, 31); s(23, "input", 0, 31); s(26, "input", 0, 31); s(28, "input", 0, 61); s(35, "input", 0, 61); s(37, "input", 0, 31); s(38, "input", 0, 61); s(43, "input", 0, 31); s(45, "input", 0, 83); s(46, "input", 0, 83); s(47, "input", 0, 31); s(48, "input", 0, 31); s(50, "input", 0, 31); s(51, "input", 0, 31); s(56, "input", 0, 61); s(58, "input", 0, 61); s(65, "input", 0, 117); s(72, "input", 0, 31); s(78, "input", 0, 83); s(80, "input", 0, 61); s(94, "input", 0, 31); s(95, "input", 0, 31); s(96, "input", 0, 151); s(97, "input", 0, 151); s(99, "input", 0, 61); s(100, "input", 0, 61); s(101, "input", 0, 61); s(102, "input", 0, 61); s(106, "input", 0, 117); s(111, "input", 0, 117); s(113, "input", 0, 61); s(129, "input", 0, 193); s(130, "input", 0, 193); s(131, "input", 0, 83); s(132, "input", 0, 83); s(133, "input", 0, 83); s(134, "input", 0, 83); s(138, "input", 0, 117); s(140, "input", 0, 193); s(141, "input", 0, 193); s(146, "input", 0, 151); s(148, "input", 0, 61); s(156, "input", 0, 117); s(162, "input", 0, 61); s(163, "input", 0, 61); s(167, "input", 0, 231); s(168, "input", 0, 231); s(169, "input", 0, 117); s(170, "input", 0, 117); s(171, "input", 0, 117); s(172, "input", 0, 117); s(173, "input", 0, 117); s(178, "input", 0, 117); s(183, "input", 0, 31); s(188, "input", 0, 193); s(190, "input", 0, 61); s(202, "input", 0, 83); s(203, "input", 0, 83); s(209, "input", 0, 151); s(210, "input", 0, 151); s(211, "input", 0, 151); s(212, "input", 0, 151); s(216, "input", 0, 117); s(222, "input", 0, 117); s(226, "input", 0, 231); s(228, "input", 0, 61); s(242, "input", 0, 117); s(243, "input", 0, 117); s(249, "input", 0, 31); s(257, "input", 0, 31); s(258, "input", 0, 193); s(259, "input", 0, 193); s(263, "input", 0, 117); s(267, "input", 0, 117); s(273, "input", 0, 151); s(274, "input", 0, 151); s(281, "input", 0, 231); s(282, "input", 0, 231); s(283, "input", 0, 231); s(284, "input", 0, 231); s(288, "input", 0, 117); s(292, "input", 0, 117); s(295, "input", 0, 31); s(297, "input", 0, 61); s(300, "input", 0, 61); s(306, "input", 0, 193); s(307, "input", 0, 193); s(315, "input", 0, 117); s(322, "input", 0, 231); s(323, "input", 0, 231); s(329, "input", 0, 31); s(339, "input", 0, 117); s(346, "input", 0, 117); s(14, "alloc", 0, 32); s(23, "alloc", 0, 32); s(26, "alloc", 0, 32); s(28, "alloc", 0, 62); s(35, "alloc", 0, 62); s(37, "alloc", 0, 32); s(38, "alloc", 0, 62); s(43, "alloc", 0, 32); s(45, "alloc", 0, 84); s(46, "alloc", 0, 84); s(47, "alloc", 0, 32); s(48, "alloc", 0, 32); s(50, "alloc", 0, 32); s(51, "alloc", 0, 32); s(56, "alloc", 0, 62); s(58, "alloc", 0, 62); s(65, "alloc", 0, 118); s(72, "alloc", 0, 32); s(78, "alloc", 0, 84); s(80, "alloc", 0, 62); s(94, "alloc", 0, 32); s(95, "alloc", 0, 32); s(96, "alloc", 0, 152); s(97, "alloc", 0, 152); s(99, "alloc", 0, 62); s(100, "alloc", 0, 62); s(101, "alloc", 0, 62); s(102, "alloc", 0, 62); s(106, "alloc", 0, 118); s(111, "alloc", 0, 118); s(113, "alloc", 0, 62); s(129, "alloc", 0, 194); s(130, "alloc", 0, 194); s(131, "alloc", 0, 84); s(132, "alloc", 0, 84); s(133, "alloc", 0, 84); s(134, "alloc", 0, 84); s(138, "alloc", 0, 118); s(140, "alloc", 0, 194); s(141, "alloc", 0, 194); s(146, "alloc", 0, 152); s(148, "alloc", 0, 62); s(156, "alloc", 0, 118); s(162, "alloc", 0, 62); s(163, "alloc", 0, 62); s(167, "alloc", 0, 232); s(168, "alloc", 0, 232); s(169, "alloc", 0, 118); s(170, "alloc", 0, 118); s(171, "alloc", 0, 118); s(172, "alloc", 0, 118); s(173, "alloc", 0, 118); s(178, "alloc", 0, 118); s(183, "alloc", 0, 32); s(188, "alloc", 0, 194); s(190, "alloc", 0, 62); s(202, "alloc", 0, 84); s(203, "alloc", 0, 84); s(209, "alloc", 0, 152); s(210, "alloc", 0, 152); s(211, "alloc", 0, 152); s(212, "alloc", 0, 152); s(216, "alloc", 0, 118); s(222, "alloc", 0, 118); s(226, "alloc", 0, 232); s(228, "alloc", 0, 62); s(242, "alloc", 0, 118); s(243, "alloc", 0, 118); s(249, "alloc", 0, 32); s(257, "alloc", 0, 32); s(258, "alloc", 0, 194); s(259, "alloc", 0, 194); s(263, "alloc", 0, 118); s(267, "alloc", 0, 118); s(273, "alloc", 0, 152); s(274, "alloc", 0, 152); s(281, "alloc", 0, 232); s(282, "alloc", 0, 232); s(283, "alloc", 0, 232); s(284, "alloc", 0, 232); s(288, "alloc", 0, 118); s(292, "alloc", 0, 118); s(295, "alloc", 0, 32); s(297, "alloc", 0, 62); s(300, "alloc", 0, 62); s(306, "alloc", 0, 194); s(307, "alloc", 0, 194); s(315, "alloc", 0, 118); s(322, "alloc", 0, 232); s(323, "alloc", 0, 232); s(329, "alloc", 0, 32); s(339, "alloc", 0, 118); s(346, "alloc", 0, 118); s(14, "&", 0, 33); s(23, "&", 0, 33); s(26, "&", 0, 33); s(28, "&", 0, 63); s(35, "&", 0, 63); s(37, "&", 0, 33); s(38, "&", 0, 63); s(43, "&", 0, 33); s(45, "&", 0, 85); s(46, "&", 0, 85); s(47, "&", 0, 33); s(48, "&", 0, 33); s(50, "&", 0, 33); s(51, "&", 0, 33); s(56, "&", 0, 63); s(58, "&", 0, 63); s(65, "&", 0, 119); s(72, "&", 0, 33); s(78, "&", 0, 85); s(80, "&", 0, 63); s(94, "&", 0, 33); s(95, "&", 0, 33); s(96, "&", 0, 153); s(97, "&", 0, 153); s(99, "&", 0, 63); s(100, "&", 0, 63); s(101, "&", 0, 63); s(102, "&", 0, 63); s(106, "&", 0, 119); s(111, "&", 0, 119); s(113, "&", 0, 63); s(129, "&", 0, 195); s(130, "&", 0, 195); s(131, "&", 0, 85); s(132, "&", 0, 85); s(133, "&", 0, 85); s(134, "&", 0, 85); s(138, "&", 0, 119); s(140, "&", 0, 195); s(141, "&", 0, 195); s(146, "&", 0, 153); s(148, "&", 0, 63); s(156, "&", 0, 119); s(162, "&", 0, 63); s(163, "&", 0, 63); s(167, "&", 0, 233); s(168, "&", 0, 233); s(169, "&", 0, 119); s(170, "&", 0, 119); s(171, "&", 0, 119); s(172, "&", 0, 119); s(173, "&", 0, 119); s(178, "&", 0, 119); s(183, "&", 0, 33); s(188, "&", 0, 195); s(190, "&", 0, 63); s(202, "&", 0, 85); s(203, "&", 0, 85); s(209, "&", 0, 153); s(210, "&", 0, 153); s(211, "&", 0, 153); s(212, "&", 0, 153); s(216, "&", 0, 119); s(222, "&", 0, 119); s(226, "&", 0, 233); s(228, "&", 0, 63); s(242, "&", 0, 119); s(243, "&", 0, 119); s(249, "&", 0, 33); s(257, "&", 0, 33); s(258, "&", 0, 195); s(259, "&", 0, 195); s(263, "&", 0, 119); s(267, "&", 0, 119); s(273, "&", 0, 153); s(274, "&", 0, 153); s(281, "&", 0, 233); s(282, "&", 0, 233); s(283, "&", 0, 233); s(284, "&", 0, 233); s(288, "&", 0, 119); s(292, "&", 0, 119); s(295, "&", 0, 33); s(297, "&", 0, 63); s(300, "&", 0, 63); s(306, "&", 0, 195); s(307, "&", 0, 195); s(315, "&", 0, 119); s(322, "&", 0, 233); s(323, "&", 0, 233); s(329, "&", 0, 33); s(339, "&", 0, 119); s(346, "&", 0, 119); s(14, "null", 0, 34); s(23, "null", 0, 34); s(26, "null", 0, 34); s(28, "null", 0, 64); s(35, "null", 0, 64); s(37, "null", 0, 34); s(38, "null", 0, 64); s(43, "null", 0, 34); s(45, "null", 0, 86); s(46, "null", 0, 86); s(47, "null", 0, 34); s(48, "null", 0, 34); s(50, "null", 0, 34); s(51, "null", 0, 34); s(56, "null", 0, 64); s(58, "null", 0, 64); s(65, "null", 0, 120); s(72, "null", 0, 34); s(78, "null", 0, 86); s(80, "null", 0, 64); s(94, "null", 0, 34); s(95, "null", 0, 34); s(96, "null", 0, 154); s(97, "null", 0, 154); s(99, "null", 0, 64); s(100, "null", 0, 64); s(101, "null", 0, 64); s(102, "null", 0, 64); s(106, "null", 0, 120); s(111, "null", 0, 120); s(113, "null", 0, 64); s(129, "null", 0, 196); s(130, "null", 0, 196); s(131, "null", 0, 86); s(132, "null", 0, 86); s(133, "null", 0, 86); s(134, "null", 0, 86); s(138, "null", 0, 120); s(140, "null", 0, 196); s(141, "null", 0, 196); s(146, "null", 0, 154); s(148, "null", 0, 64); s(156, "null", 0, 120); s(162, "null", 0, 64); s(163, "null", 0, 64); s(167, "null", 0, 234); s(168, "null", 0, 234); s(169, "null", 0, 120); s(170, "null", 0, 120); s(171, "null", 0, 120); s(172, "null", 0, 120); s(173, "null", 0, 120); s(178, "null", 0, 120); s(183, "null", 0, 34); s(188, "null", 0, 196); s(190, "null", 0, 64); s(202, "null", 0, 86); s(203, "null", 0, 86); s(209, "null", 0, 154); s(210, "null", 0, 154); s(211, "null", 0, 154); s(212, "null", 0, 154); s(216, "null", 0, 120); s(222, "null", 0, 120); s(226, "null", 0, 234); s(228, "null", 0, 64); s(242, "null", 0, 120); s(243, "null", 0, 120); s(249, "null", 0, 34); s(257, "null", 0, 34); s(258, "null", 0, 196); s(259, "null", 0, 196); s(263, "null", 0, 120); s(267, "null", 0, 120); s(273, "null", 0, 154); s(274, "null", 0, 154); s(281, "null", 0, 234); s(282, "null", 0, 234); s(283, "null", 0, 234); s(284, "null", 0, 234); s(288, "null", 0, 120); s(292, "null", 0, 120); s(295, "null", 0, 34); s(297, "null", 0, 64); s(300, "null", 0, 64); s(306, "null", 0, 196); s(307, "null", 0, 196); s(315, "null", 0, 120); s(322, "null", 0, 234); s(323, "null", 0, 234); s(329, "null", 0, 34); s(339, "null", 0, 120); s(346, "null", 0, 120); s(13, "=", 0, 23); s(22, "=", 0, 43); s(248, "=", 0, 295); s(294, "=", 0, 329); s(24, ";", 0, 49); s(40, ";", 0, 71); s(44, ";", 0, 75); s(68, ";", 0, 122); s(73, ";", 0, 127); s(74, ";", 0, 128); s(126, ";", 0, 184); s(255, ";", 0, 302); s(296, ";", 0, 331); s(303, ";", 0, 336); s(330, ";", 0, 350); s(349, ";", 0, 360); s(9, "output", 0, 14); s(16, "output", 0, 14); s(21, "output", 0, 14); s(41, "output", 0, 14); s(71, "output", 0, 14); s(125, "output", 0, 14); s(127, "output", 0, 14); s(180, "output", 0, 249); s(182, "output", 0, 249); s(185, "output", 0, 14); s(251, "output", 0, 249); s(254, "output", 0, 249); s(352, "output", 0, 249); s(361, "output", 0, 249); s(362, "output", 0, 249); s(363, "output", 0, 249); s(366, "output", 0, 249); s(368, "output", 0, 249); s(372, "output", 0, 249); s(373, "output", 0, 249); s(9, "if", 0, 15); s(16, "if", 0, 15); s(21, "if", 0, 15); s(41, "if", 0, 15); s(71, "if", 0, 15); s(125, "if", 0, 15); s(127, "if", 0, 15); s(180, "if", 0, 250); s(182, "if", 0, 250); s(185, "if", 0, 15); s(251, "if", 0, 250); s(254, "if", 0, 250); s(352, "if", 0, 250); s(361, "if", 0, 250); s(362, "if", 0, 250); s(363, "if", 0, 250); s(366, "if", 0, 250); s(368, "if", 0, 250); s(372, "if", 0, 250); s(373, "if", 0, 250); s(6, "{", 0, 9); s(11, "{", 0, 21); s(121, "{", 0, 180); s(123, "{", 0, 182); s(333, "{", 0, 352); s(351, "{", 0, 361); s(353, "{", 0, 363); s(371, "{", 0, 372); s(122, "}", 0, 181); s(184, "}", 0, 256); s(251, "}", 0, 298); s(254, "}", 0, 301); s(302, "}", 0, 335); s(336, "}", 0, 354); s(362, "}", 0, 367); s(366, "}", 0, 369); s(368, "}", 0, 370); s(373, "}", 0, 374); s(298, "else", 0, 333); s(369, "else", 0, 371); s(9, "while", 0, 17); s(16, "while", 0, 17); s(21, "while", 0, 17); s(41, "while", 0, 17); s(71, "while", 0, 17); s(125, "while", 0, 17); s(127, "while", 0, 17); s(180, "while", 0, 252); s(182, "while", 0, 252); s(185, "while", 0, 17); s(251, "while", 0, 252); s(254, "while", 0, 252); s(352, "while", 0, 252); s(361, "while", 0, 252); s(362, "while", 0, 252); s(363, "while", 0, 252); s(366, "while", 0, 252); s(368, "while", 0, 252); s(372, "while", 0, 252); s(373, "while", 0, 252); s(16, "return", 0, 37); s(41, "return", 0, 72); s(125, "return", 0, 183); s(185, "return", 0, 257); s(9, "var", 0, 19); s(21, "var", 0, 42); s(2, "$", 2, 0); s(3, "$", 1, 37); s(3, "X", 1, 37); s(5, "$", 1, 36); s(5, "X", 1, 36); s(7, ")", 1, 35); s(7, ",", 1, 35); s(18, "return", 1, 29); s(18, "X", 1, 29); s(18, "output", 1, 29); s(18, "if", 1, 29); s(18, "while", 1, 29); s(18, "*", 1, 29); s(20, ")", 1, 34); s(20, ",", 1, 34); s(25, ";", 1, 2); s(25, "+", 1, 2); s(25, "-", 1, 2); s(25, ">", 1, 2); s(25, "==", 1, 2); s(27, ";", 1, 7); s(27, "+", 1, 7); s(27, "-", 1, 7); s(27, "*", 1, 7); s(27, "/", 1, 7); s(27, ">", 1, 7); s(27, "==", 1, 7); s(29, ";", 1, 9); s(29, "+", 1, 9); s(29, "-", 1, 9); s(29, "*", 1, 9); s(29, "/", 1, 9); s(29, ">", 1, 9); s(29, "==", 1, 9); s(30, ";", 1, 10); s(30, "+", 1, 10); s(30, "-", 1, 10); s(30, "*", 1, 10); s(30, "/", 1, 10); s(30, ">", 1, 10); s(30, "==", 1, 10); s(31, ";", 1, 13); s(31, "+", 1, 13); s(31, "-", 1, 13); s(31, "*", 1, 13); s(31, "/", 1, 13); s(31, ">", 1, 13); s(31, "==", 1, 13); s(32, ";", 1, 18); s(32, "+", 1, 18); s(32, "-", 1, 18); s(32, "*", 1, 18); s(32, "/", 1, 18); s(32, ">", 1, 18); s(32, "==", 1, 18); s(34, ";", 1, 21); s(34, "+", 1, 21); s(34, "-", 1, 21); s(34, "*", 1, 21); s(34, "/", 1, 21); s(34, ">", 1, 21); s(34, "==", 1, 21); s(36, "return", 1, 28); s(36, "X", 1, 28); s(36, "output", 1, 28); s(36, "if", 1, 28); s(36, "while", 1, 28); s(36, "*", 1, 28); s(39, ";", 1, 35); s(39, ",", 1, 35); s(49, "return", 1, 23); s(49, "X", 1, 23); s(49, "output", 1, 23); s(49, "if", 1, 23); s(49, "while", 1, 23); s(49, "*", 1, 23); s(52, ";", 1, 20); s(52, "*", 1, 20); s(52, "/", 1, 20); s(53, ";", 1, 2); s(53, "+", 1, 2); s(53, "-", 1, 2); s(53, ">", 1, 2); s(53, "==", 1, 2); s(55, ")", 1, 2); s(55, "+", 1, 2); s(55, "-", 1, 2); s(55, ">", 1, 2); s(55, "==", 1, 2); s(57, ")", 1, 7); s(57, "+", 1, 7); s(57, "-", 1, 7); s(57, "*", 1, 7); s(57, "/", 1, 7); s(57, ">", 1, 7); s(57, "==", 1, 7); s(59, ")", 1, 9); s(59, "+", 1, 9); s(59, "-", 1, 9); s(59, "*", 1, 9); s(59, "/", 1, 9); s(59, ">", 1, 9); s(59, "==", 1, 9); s(60, ")", 1, 10); s(60, "+", 1, 10); s(60, "-", 1, 10); s(60, "*", 1, 10); s(60, "/", 1, 10); s(60, ">", 1, 10); s(60, "==", 1, 10); s(61, ")", 1, 13); s(61, "+", 1, 13); s(61, "-", 1, 13); s(61, "*", 1, 13); s(61, "/", 1, 13); s(61, ">", 1, 13); s(61, "==", 1, 13); s(62, ")", 1, 18); s(62, "+", 1, 18); s(62, "-", 1, 18); s(62, "*", 1, 18); s(62, "/", 1, 18); s(62, ">", 1, 18); s(62, "==", 1, 18); s(64, ")", 1, 21); s(64, "+", 1, 21); s(64, "-", 1, 21); s(64, "*", 1, 21); s(64, "/", 1, 21); s(64, ">", 1, 21); s(64, "==", 1, 21); s(66, ";", 1, 19); s(66, "+", 1, 19); s(66, "-", 1, 19); s(66, "*", 1, 19); s(66, "/", 1, 19); s(66, ">", 1, 19); s(66, "==", 1, 19); s(75, "return", 1, 22); s(75, "X", 1, 22); s(75, "output", 1, 22); s(75, "if", 1, 22); s(75, "while", 1, 22); s(75, "*", 1, 22); s(77, ";", 1, 0); s(77, "+", 1, 2); s(77, "-", 1, 2); s(77, ">", 1, 2); s(77, "==", 1, 2); s(79, ";", 1, 7); s(79, "+", 1, 7); s(79, "-", 1, 7); s(79, ">", 1, 7); s(79, "==", 1, 7); s(79, "*", 1, 7); s(79, "/", 1, 7); s(81, ";", 1, 9); s(81, "+", 1, 9); s(81, "-", 1, 9); s(81, ">", 1, 9); s(81, "==", 1, 9); s(81, "*", 1, 9); s(81, "/", 1, 9); s(82, ";", 1, 10); s(82, "+", 1, 10); s(82, "-", 1, 10); s(82, ">", 1, 10); s(82, "==", 1, 10); s(82, "*", 1, 10); s(82, "/", 1, 10); s(83, ";", 1, 13); s(83, "+", 1, 13); s(83, "-", 1, 13); s(83, ">", 1, 13); s(83, "==", 1, 13); s(83, "*", 1, 13); s(83, "/", 1, 13); s(84, ";", 1, 18); s(84, "+", 1, 18); s(84, "-", 1, 18); s(84, ">", 1, 18); s(84, "==", 1, 18); s(84, "*", 1, 18); s(84, "/", 1, 18); s(86, ";", 1, 21); s(86, "+", 1, 21); s(86, "-", 1, 21); s(86, ">", 1, 21); s(86, "==", 1, 21); s(86, "*", 1, 21); s(86, "/", 1, 21); s(87, ";", 1, 1); s(87, "+", 1, 2); s(87, "-", 1, 2); s(87, ">", 1, 2); s(87, "==", 1, 2); s(88, ";", 1, 11); s(88, "*", 1, 11); s(88, "/", 1, 11); s(89, ";", 1, 12); s(89, "*", 1, 12); s(89, "/", 1, 12); s(91, ">", 1, 2); s(91, "==", 1, 2); s(91, "+", 1, 2); s(91, "-", 1, 2); s(92, ";", 1, 5); s(92, "+", 1, 7); s(92, "-", 1, 7); s(92, "*", 1, 7); s(92, "/", 1, 7); s(92, ">", 1, 7); s(92, "==", 1, 7); s(93, ";", 1, 6); s(93, "+", 1, 7); s(93, "-", 1, 7); s(93, "*", 1, 7); s(93, "/", 1, 7); s(93, ">", 1, 7); s(93, "==", 1, 7); s(98, ";", 1, 8); s(98, "+", 1, 8); s(98, "-", 1, 8); s(98, "*", 1, 8); s(98, "/", 1, 8); s(98, ">", 1, 8); s(98, "==", 1, 8); s(103, ")", 1, 20); s(103, "*", 1, 20); s(103, "/", 1, 20); s(104, ")", 1, 2); s(104, "+", 1, 2); s(104, "-", 1, 2); s(104, ">", 1, 2); s(104, "==", 1, 2); s(107, ")", 1, 19); s(107, "+", 1, 19); s(107, "-", 1, 19); s(107, "*", 1, 19); s(107, "/", 1, 19); s(107, ">", 1, 19); s(107, "==", 1, 19); s(108, ")", 1, 4); s(108, ",", 1, 4); s(109, ")", 1, 2); s(109, ",", 1, 2); s(109, "+", 1, 2); s(109, "-", 1, 2); s(109, ">", 1, 2); s(109, "==", 1, 2); s(112, ")", 1, 7); s(112, ",", 1, 7); s(112, "+", 1, 7); s(112, "-", 1, 7); s(112, "*", 1, 7); s(112, "/", 1, 7); s(112, ">", 1, 7); s(112, "==", 1, 7); s(114, ";", 1, 15); s(114, "+", 1, 15); s(114, "-", 1, 15); s(114, "*", 1, 15); s(114, "/", 1, 15); s(114, ">", 1, 15); s(114, "==", 1, 15); s(115, ")", 1, 9); s(115, ",", 1, 9); s(115, "+", 1, 9); s(115, "-", 1, 9); s(115, "*", 1, 9); s(115, "/", 1, 9); s(115, ">", 1, 9); s(115, "==", 1, 9); s(116, ")", 1, 10); s(116, ",", 1, 10); s(116, "+", 1, 10); s(116, "-", 1, 10); s(116, "*", 1, 10); s(116, "/", 1, 10); s(116, ">", 1, 10); s(116, "==", 1, 10); s(117, ")", 1, 13); s(117, ",", 1, 13); s(117, "+", 1, 13); s(117, "-", 1, 13); s(117, "*", 1, 13); s(117, "/", 1, 13); s(117, ">", 1, 13); s(117, "==", 1, 13); s(118, ")", 1, 18); s(118, ",", 1, 18); s(118, "+", 1, 18); s(118, "-", 1, 18); s(118, "*", 1, 18); s(118, "/", 1, 18); s(118, ">", 1, 18); s(118, "==", 1, 18); s(120, ")", 1, 21); s(120, ",", 1, 21); s(120, "+", 1, 21); s(120, "-", 1, 21); s(120, "*", 1, 21); s(120, "/", 1, 21); s(120, ">", 1, 21); s(120, "==", 1, 21); s(124, ";", 1, 34); s(124, ",", 1, 34); s(128, "return", 1, 27); s(128, "X", 1, 27); s(128, "output", 1, 27); s(128, "if", 1, 27); s(128, "while", 1, 27); s(128, "*", 1, 27); s(135, ";", 1, 20); s(135, "*", 1, 20); s(135, "/", 1, 20); s(136, ";", 1, 2); s(136, "+", 1, 2); s(136, "-", 1, 2); s(136, ">", 1, 2); s(136, "==", 1, 2); s(139, ";", 1, 19); s(139, "+", 1, 19); s(139, "-", 1, 19); s(139, ">", 1, 19); s(139, "==", 1, 19); s(139, "*", 1, 19); s(139, "/", 1, 19); s(142, ";", 1, 0); s(142, "+", 1, 2); s(142, "-", 1, 2); s(142, ">", 1, 2); s(142, "==", 1, 2); s(143, ";", 1, 1); s(143, "+", 1, 2); s(143, "-", 1, 2); s(143, ">", 1, 2); s(143, "==", 1, 2); s(145, ")", 1, 0); s(145, "+", 1, 2); s(145, "-", 1, 2); s(145, ">", 1, 2); s(145, "==", 1, 2); s(147, ")", 1, 7); s(147, "+", 1, 7); s(147, "-", 1, 7); s(147, ">", 1, 7); s(147, "==", 1, 7); s(147, "*", 1, 7); s(147, "/", 1, 7); s(149, ")", 1, 9); s(149, "+", 1, 9); s(149, "-", 1, 9); s(149, ">", 1, 9); s(149, "==", 1, 9); s(149, "*", 1, 9); s(149, "/", 1, 9); s(150, ")", 1, 10); s(150, "+", 1, 10); s(150, "-", 1, 10); s(150, ">", 1, 10); s(150, "==", 1, 10); s(150, "*", 1, 10); s(150, "/", 1, 10); s(151, ")", 1, 13); s(151, "+", 1, 13); s(151, "-", 1, 13); s(151, ">", 1, 13); s(151, "==", 1, 13); s(151, "*", 1, 13); s(151, "/", 1, 13); s(152, ")", 1, 18); s(152, "+", 1, 18); s(152, "-", 1, 18); s(152, ">", 1, 18); s(152, "==", 1, 18); s(152, "*", 1, 18); s(152, "/", 1, 18); s(154, ")", 1, 21); s(154, "+", 1, 21); s(154, "-", 1, 21); s(154, ">", 1, 21); s(154, "==", 1, 21); s(154, "*", 1, 21); s(154, "/", 1, 21); s(155, ")", 1, 1); s(155, "+", 1, 2); s(155, "-", 1, 2); s(155, ">", 1, 2); s(155, "==", 1, 2); s(157, ")", 1, 11); s(157, "*", 1, 11); s(157, "/", 1, 11); s(158, ")", 1, 12); s(158, "*", 1, 12); s(158, "/", 1, 12); s(160, ")", 1, 5); s(160, "+", 1, 7); s(160, "-", 1, 7); s(160, "*", 1, 7); s(160, "/", 1, 7); s(160, ">", 1, 7); s(160, "==", 1, 7); s(161, ")", 1, 6); s(161, "+", 1, 7); s(161, "-", 1, 7); s(161, "*", 1, 7); s(161, "/", 1, 7); s(161, ">", 1, 7); s(161, "==", 1, 7); s(164, ")", 1, 8); s(164, "+", 1, 8); s(164, "-", 1, 8); s(164, "*", 1, 8); s(164, "/", 1, 8); s(164, ">", 1, 8); s(164, "==", 1, 8); s(166, ")", 1, 15); s(166, "+", 1, 15); s(166, "-", 1, 15); s(166, "*", 1, 15); s(166, "/", 1, 15); s(166, ">", 1, 15); s(166, "==", 1, 15); s(174, ";", 1, 14); s(174, "+", 1, 14); s(174, "-", 1, 14); s(174, "*", 1, 14); s(174, "/", 1, 14); s(174, ">", 1, 14); s(174, "==", 1, 14); s(175, ")", 1, 20); s(175, ",", 1, 20); s(175, "*", 1, 20); s(175, "/", 1, 20); s(176, ")", 1, 2); s(176, ",", 1, 2); s(176, "+", 1, 2); s(176, "-", 1, 2); s(176, ">", 1, 2); s(176, "==", 1, 2); s(179, ")", 1, 19); s(179, ",", 1, 19); s(179, "+", 1, 19); s(179, "-", 1, 19); s(179, "*", 1, 19); s(179, "/", 1, 19); s(179, ">", 1, 19); s(179, "==", 1, 19); s(181, "$", 1, 31); s(181, "X", 1, 31); s(187, ">", 1, 2); s(187, "==", 1, 2); s(187, "+", 1, 2); s(187, "-", 1, 2); s(189, ">", 1, 7); s(189, "==", 1, 7); s(189, "+", 1, 7); s(189, "-", 1, 7); s(189, "*", 1, 7); s(189, "/", 1, 7); s(191, ">", 1, 9); s(191, "==", 1, 9); s(191, "+", 1, 9); s(191, "-", 1, 9); s(191, "*", 1, 9); s(191, "/", 1, 9); s(192, ">", 1, 10); s(192, "==", 1, 10); s(192, "+", 1, 10); s(192, "-", 1, 10); s(192, "*", 1, 10); s(192, "/", 1, 10); s(193, ">", 1, 13); s(193, "==", 1, 13); s(193, "+", 1, 13); s(193, "-", 1, 13); s(193, "*", 1, 13); s(193, "/", 1, 13); s(194, ">", 1, 18); s(194, "==", 1, 18); s(194, "+", 1, 18); s(194, "-", 1, 18); s(194, "*", 1, 18); s(194, "/", 1, 18); s(196, ">", 1, 21); s(196, "==", 1, 21); s(196, "+", 1, 21); s(196, "-", 1, 21); s(196, "*", 1, 21); s(196, "/", 1, 21); s(197, ">", 1, 2); s(197, "==", 1, 2); s(197, "+", 1, 2); s(197, "-", 1, 2); s(198, ";", 1, 11); s(198, "*", 1, 11); s(198, "/", 1, 11); s(199, ";", 1, 12); s(199, "*", 1, 12); s(199, "/", 1, 12); s(200, ";", 1, 5); s(200, "+", 1, 7); s(200, "-", 1, 7); s(200, ">", 1, 7); s(200, "==", 1, 7); s(200, "*", 1, 7); s(200, "/", 1, 7); s(201, ";", 1, 6); s(201, "+", 1, 7); s(201, "-", 1, 7); s(201, ">", 1, 7); s(201, "==", 1, 7); s(201, "*", 1, 7); s(201, "/", 1, 7); s(204, ";", 1, 8); s(204, "+", 1, 8); s(204, "-", 1, 8); s(204, ">", 1, 8); s(204, "==", 1, 8); s(204, "*", 1, 8); s(204, "/", 1, 8); s(206, ";", 1, 15); s(206, "+", 1, 15); s(206, "-", 1, 15); s(206, ">", 1, 15); s(206, "==", 1, 15); s(206, "*", 1, 15); s(206, "/", 1, 15); s(207, ">", 1, 7); s(207, "==", 1, 7); s(207, "+", 1, 7); s(207, "-", 1, 7); s(207, "*", 1, 7); s(207, "/", 1, 7); s(208, ">", 1, 7); s(208, "==", 1, 7); s(208, "+", 1, 7); s(208, "-", 1, 7); s(208, "*", 1, 7); s(208, "/", 1, 7); s(213, ")", 1, 20); s(213, "*", 1, 20); s(213, "/", 1, 20); s(214, ")", 1, 2); s(214, "+", 1, 2); s(214, "-", 1, 2); s(214, ">", 1, 2); s(214, "==", 1, 2); s(217, ")", 1, 19); s(217, "+", 1, 19); s(217, "-", 1, 19); s(217, ">", 1, 19); s(217, "==", 1, 19); s(217, "*", 1, 19); s(217, "/", 1, 19); s(219, ";", 1, 17); s(219, "+", 1, 17); s(219, "-", 1, 17); s(219, "*", 1, 17); s(219, "/", 1, 17); s(219, ">", 1, 17); s(219, "==", 1, 17); s(220, ")", 1, 0); s(220, "+", 1, 2); s(220, "-", 1, 2); s(220, ">", 1, 2); s(220, "==", 1, 2); s(221, ")", 1, 1); s(221, "+", 1, 2); s(221, "-", 1, 2); s(221, ">", 1, 2); s(221, "==", 1, 2); s(223, ")", 1, 14); s(223, "+", 1, 14); s(223, "-", 1, 14); s(223, "*", 1, 14); s(223, "/", 1, 14); s(223, ">", 1, 14); s(223, "==", 1, 14); s(225, ")", 1, 0); s(225, ",", 1, 0); s(225, "+", 1, 2); s(225, "-", 1, 2); s(225, ">", 1, 2); s(225, "==", 1, 2); s(227, ")", 1, 7); s(227, ",", 1, 7); s(227, "+", 1, 7); s(227, "-", 1, 7); s(227, ">", 1, 7); s(227, "==", 1, 7); s(227, "*", 1, 7); s(227, "/", 1, 7); s(229, ")", 1, 9); s(229, ",", 1, 9); s(229, "+", 1, 9); s(229, "-", 1, 9); s(229, ">", 1, 9); s(229, "==", 1, 9); s(229, "*", 1, 9); s(229, "/", 1, 9); s(230, ")", 1, 10); s(230, ",", 1, 10); s(230, "+", 1, 10); s(230, "-", 1, 10); s(230, ">", 1, 10); s(230, "==", 1, 10); s(230, "*", 1, 10); s(230, "/", 1, 10); s(231, ")", 1, 13); s(231, ",", 1, 13); s(231, "+", 1, 13); s(231, "-", 1, 13); s(231, ">", 1, 13); s(231, "==", 1, 13); s(231, "*", 1, 13); s(231, "/", 1, 13); s(232, ")", 1, 18); s(232, ",", 1, 18); s(232, "+", 1, 18); s(232, "-", 1, 18); s(232, ">", 1, 18); s(232, "==", 1, 18); s(232, "*", 1, 18); s(232, "/", 1, 18); s(234, ")", 1, 21); s(234, ",", 1, 21); s(234, "+", 1, 21); s(234, "-", 1, 21); s(234, ">", 1, 21); s(234, "==", 1, 21); s(234, "*", 1, 21); s(234, "/", 1, 21); s(235, ")", 1, 1); s(235, ",", 1, 1); s(235, "+", 1, 2); s(235, "-", 1, 2); s(235, ">", 1, 2); s(235, "==", 1, 2); s(236, ")", 1, 11); s(236, ",", 1, 11); s(236, "*", 1, 11); s(236, "/", 1, 11); s(237, ")", 1, 12); s(237, ",", 1, 12); s(237, "*", 1, 12); s(237, "/", 1, 12); s(239, ")", 1, 5); s(239, ",", 1, 5); s(239, "+", 1, 7); s(239, "-", 1, 7); s(239, "*", 1, 7); s(239, "/", 1, 7); s(239, ">", 1, 7); s(239, "==", 1, 7); s(240, ")", 1, 6); s(240, ",", 1, 6); s(240, "+", 1, 7); s(240, "-", 1, 7); s(240, "*", 1, 7); s(240, "/", 1, 7); s(240, ">", 1, 7); s(240, "==", 1, 7); s(241, ")", 1, 3); s(241, ",", 1, 3); s(244, ")", 1, 8); s(244, ",", 1, 8); s(244, "+", 1, 8); s(244, "-", 1, 8); s(244, "*", 1, 8); s(244, "/", 1, 8); s(244, ">", 1, 8); s(244, "==", 1, 8); s(246, ")", 1, 15); s(246, ",", 1, 15); s(246, "+", 1, 15); s(246, "-", 1, 15); s(246, "*", 1, 15); s(246, "/", 1, 15); s(246, ">", 1, 15); s(246, "==", 1, 15); s(253, "}", 1, 29); s(253, "X", 1, 29); s(253, "output", 1, 29); s(253, "if", 1, 29); s(253, "while", 1, 29); s(253, "*", 1, 29); s(256, "$", 1, 30); s(256, "X", 1, 30); s(260, "*", 1, 20); s(260, "/", 1, 20); s(261, ">", 1, 2); s(261, "==", 1, 2); s(261, "+", 1, 2); s(261, "-", 1, 2); s(264, ">", 1, 19); s(264, "==", 1, 19); s(264, "+", 1, 19); s(264, "-", 1, 19); s(264, "*", 1, 19); s(264, "/", 1, 19); s(265, ";", 1, 0); s(265, "+", 1, 2); s(265, "-", 1, 2); s(265, ">", 1, 2); s(265, "==", 1, 2); s(266, ";", 1, 1); s(266, "+", 1, 2); s(266, "-", 1, 2); s(266, ">", 1, 2); s(266, "==", 1, 2); s(268, ";", 1, 14); s(268, "+", 1, 14); s(268, "-", 1, 14); s(268, ">", 1, 14); s(268, "==", 1, 14); s(268, "*", 1, 14); s(268, "/", 1, 14); s(269, ")", 1, 11); s(269, "*", 1, 11); s(269, "/", 1, 11); s(270, ")", 1, 12); s(270, "*", 1, 12); s(270, "/", 1, 12); s(271, ")", 1, 5); s(271, "+", 1, 7); s(271, "-", 1, 7); s(271, ">", 1, 7); s(271, "==", 1, 7); s(271, "*", 1, 7); s(271, "/", 1, 7); s(272, ")", 1, 6); s(272, "+", 1, 7); s(272, "-", 1, 7); s(272, ">", 1, 7); s(272, "==", 1, 7); s(272, "*", 1, 7); s(272, "/", 1, 7); s(275, ")", 1, 8); s(275, "+", 1, 8); s(275, "-", 1, 8); s(275, ">", 1, 8); s(275, "==", 1, 8); s(275, "*", 1, 8); s(275, "/", 1, 8); s(277, ")", 1, 15); s(277, "+", 1, 15); s(277, "-", 1, 15); s(277, ">", 1, 15); s(277, "==", 1, 15); s(277, "*", 1, 15); s(277, "/", 1, 15); s(278, ";", 1, 16); s(278, "+", 1, 16); s(278, "-", 1, 16); s(278, "*", 1, 16); s(278, "/", 1, 16); s(278, ">", 1, 16); s(278, "==", 1, 16); s(280, ")", 1, 17); s(280, "+", 1, 17); s(280, "-", 1, 17); s(280, "*", 1, 17); s(280, "/", 1, 17); s(280, ">", 1, 17); s(280, "==", 1, 17); s(285, ")", 1, 20); s(285, ",", 1, 20); s(285, "*", 1, 20); s(285, "/", 1, 20); s(286, ")", 1, 2); s(286, ",", 1, 2); s(286, "+", 1, 2); s(286, "-", 1, 2); s(286, ">", 1, 2); s(286, "==", 1, 2); s(289, ")", 1, 19); s(289, ",", 1, 19); s(289, "+", 1, 19); s(289, "-", 1, 19); s(289, ">", 1, 19); s(289, "==", 1, 19); s(289, "*", 1, 19); s(289, "/", 1, 19); s(290, ")", 1, 0); s(290, ",", 1, 0); s(290, "+", 1, 2); s(290, "-", 1, 2); s(290, ">", 1, 2); s(290, "==", 1, 2); s(291, ")", 1, 1); s(291, ",", 1, 1); s(291, "+", 1, 2); s(291, "-", 1, 2); s(291, ">", 1, 2); s(291, "==", 1, 2); s(293, ")", 1, 14); s(293, ",", 1, 14); s(293, "+", 1, 14); s(293, "-", 1, 14); s(293, "*", 1, 14); s(293, "/", 1, 14); s(293, ">", 1, 14); s(293, "==", 1, 14); s(298, "return", 1, 24); s(298, "X", 1, 24); s(298, "output", 1, 24); s(298, "if", 1, 24); s(298, "while", 1, 24); s(298, "*", 1, 24); s(299, "}", 1, 28); s(299, "X", 1, 28); s(299, "output", 1, 28); s(299, "if", 1, 28); s(299, "while", 1, 28); s(299, "*", 1, 28); s(301, "return", 1, 26); s(301, "X", 1, 26); s(301, "output", 1, 26); s(301, "if", 1, 26); s(301, "while", 1, 26); s(301, "*", 1, 26); s(304, "*", 1, 11); s(304, "/", 1, 11); s(305, "*", 1, 12); s(305, "/", 1, 12); s(308, ">", 1, 8); s(308, "==", 1, 8); s(308, "+", 1, 8); s(308, "-", 1, 8); s(308, "*", 1, 8); s(308, "/", 1, 8); s(310, ">", 1, 15); s(310, "==", 1, 15); s(310, "+", 1, 15); s(310, "-", 1, 15); s(310, "*", 1, 15); s(310, "/", 1, 15); s(312, ";", 1, 17); s(312, "+", 1, 17); s(312, "-", 1, 17); s(312, ">", 1, 17); s(312, "==", 1, 17); s(312, "*", 1, 17); s(312, "/", 1, 17); s(313, ")", 1, 0); s(313, "+", 1, 2); s(313, "-", 1, 2); s(313, ">", 1, 2); s(313, "==", 1, 2); s(314, ")", 1, 1); s(314, "+", 1, 2); s(314, "-", 1, 2); s(314, ">", 1, 2); s(314, "==", 1, 2); s(316, ")", 1, 14); s(316, "+", 1, 14); s(316, "-", 1, 14); s(316, ">", 1, 14); s(316, "==", 1, 14); s(316, "*", 1, 14); s(316, "/", 1, 14); s(317, ")", 1, 16); s(317, "+", 1, 16); s(317, "-", 1, 16); s(317, "*", 1, 16); s(317, "/", 1, 16); s(317, ">", 1, 16); s(317, "==", 1, 16); s(318, ")", 1, 11); s(318, ",", 1, 11); s(318, "*", 1, 11); s(318, "/", 1, 11); s(319, ")", 1, 12); s(319, ",", 1, 12); s(319, "*", 1, 12); s(319, "/", 1, 12); s(320, ")", 1, 5); s(320, ",", 1, 5); s(320, "+", 1, 7); s(320, "-", 1, 7); s(320, ">", 1, 7); s(320, "==", 1, 7); s(320, "*", 1, 7); s(320, "/", 1, 7); s(321, ")", 1, 6); s(321, ",", 1, 6); s(321, "+", 1, 7); s(321, "-", 1, 7); s(321, ">", 1, 7); s(321, "==", 1, 7); s(321, "*", 1, 7); s(321, "/", 1, 7); s(324, ")", 1, 8); s(324, ",", 1, 8); s(324, "+", 1, 8); s(324, "-", 1, 8); s(324, ">", 1, 8); s(324, "==", 1, 8); s(324, "*", 1, 8); s(324, "/", 1, 8); s(326, ")", 1, 15); s(326, ",", 1, 15); s(326, "+", 1, 15); s(326, "-", 1, 15); s(326, ">", 1, 15); s(326, "==", 1, 15); s(326, "*", 1, 15); s(326, "/", 1, 15); s(328, ")", 1, 17); s(328, ",", 1, 17); s(328, "+", 1, 17); s(328, "-", 1, 17); s(328, "*", 1, 17); s(328, "/", 1, 17); s(328, ">", 1, 17); s(328, "==", 1, 17); s(331, "}", 1, 23); s(331, "X", 1, 23); s(331, "output", 1, 23); s(331, "if", 1, 23); s(331, "while", 1, 23); s(331, "*", 1, 23); s(335, "$", 1, 33); s(335, "X", 1, 33); s(337, ">", 1, 2); s(337, "==", 1, 2); s(337, "+", 1, 2); s(337, "-", 1, 2); s(338, ">", 1, 2); s(338, "==", 1, 2); s(338, "+", 1, 2); s(338, "-", 1, 2); s(340, ">", 1, 14); s(340, "==", 1, 14); s(340, "+", 1, 14); s(340, "-", 1, 14); s(340, "*", 1, 14); s(340, "/", 1, 14); s(341, ";", 1, 16); s(341, "+", 1, 16); s(341, "-", 1, 16); s(341, ">", 1, 16); s(341, "==", 1, 16); s(341, "*", 1, 16); s(341, "/", 1, 16); s(343, ")", 1, 17); s(343, "+", 1, 17); s(343, "-", 1, 17); s(343, ">", 1, 17); s(343, "==", 1, 17); s(343, "*", 1, 17); s(343, "/", 1, 17); s(344, ")", 1, 0); s(344, ",", 1, 0); s(344, "+", 1, 2); s(344, "-", 1, 2); s(344, ">", 1, 2); s(344, "==", 1, 2); s(345, ")", 1, 1); s(345, ",", 1, 1); s(345, "+", 1, 2); s(345, "-", 1, 2); s(345, ">", 1, 2); s(345, "==", 1, 2); s(347, ")", 1, 14); s(347, ",", 1, 14); s(347, "+", 1, 14); s(347, "-", 1, 14); s(347, ">", 1, 14); s(347, "==", 1, 14); s(347, "*", 1, 14); s(347, "/", 1, 14); s(348, ")", 1, 16); s(348, ",", 1, 16); s(348, "+", 1, 16); s(348, "-", 1, 16); s(348, "*", 1, 16); s(348, "/", 1, 16); s(348, ">", 1, 16); s(348, "==", 1, 16); s(350, "}", 1, 22); s(350, "X", 1, 22); s(350, "output", 1, 22); s(350, "if", 1, 22); s(350, "while", 1, 22); s(350, "*", 1, 22); s(354, "$", 1, 32); s(354, "X", 1, 32); s(356, ">", 1, 17); s(356, "==", 1, 17); s(356, "+", 1, 17); s(356, "-", 1, 17); s(356, "*", 1, 17); s(356, "/", 1, 17); s(357, ")", 1, 16); s(357, "+", 1, 16); s(357, "-", 1, 16); s(357, ">", 1, 16); s(357, "==", 1, 16); s(357, "*", 1, 16); s(357, "/", 1, 16); s(359, ")", 1, 17); s(359, ",", 1, 17); s(359, "+", 1, 17); s(359, "-", 1, 17); s(359, ">", 1, 17); s(359, "==", 1, 17); s(359, "*", 1, 17); s(359, "/", 1, 17); s(360, "}", 1, 27); s(360, "X", 1, 27); s(360, "output", 1, 27); s(360, "if", 1, 27); s(360, "while", 1, 27); s(360, "*", 1, 27); s(364, ">", 1, 16); s(364, "==", 1, 16); s(364, "+", 1, 16); s(364, "-", 1, 16); s(364, "*", 1, 16); s(364, "/", 1, 16); s(365, ")", 1, 16); s(365, ",", 1, 16); s(365, "+", 1, 16); s(365, "-", 1, 16); s(365, ">", 1, 16); s(365, "==", 1, 16); s(365, "*", 1, 16); s(365, "/", 1, 16); s(367, "return", 1, 25); s(367, "X", 1, 25); s(367, "output", 1, 25); s(367, "if", 1, 25); s(367, "while", 1, 25); s(367, "*", 1, 25); s(369, "}", 1, 24); s(369, "X", 1, 24); s(369, "output", 1, 24); s(369, "if", 1, 24); s(369, "while", 1, 24); s(369, "*", 1, 24); s(370, "}", 1, 26); s(370, "X", 1, 26); s(370, "output", 1, 26); s(370, "if", 1, 26); s(370, "while", 1, 26); s(370, "*", 1, 26); s(374, "}", 1, 25); s(374, "X", 1, 25); s(374, "output", 1, 25); s(374, "if", 1, 25); s(374, "while", 1, 25); s(374, "*", 1, 25);
        return actions;
    }

    public static loadDefaultGotos() {
        let gotos = new C.Dictionary<[number, TSymbol], number>();
        let s = (state: number, symStr: string, target: number) => {
            gotos.setValue([state, new TSymbol(symStr)], target);
        };
        s(14, "E", 24); s(23, "E", 44); s(26, "E", 52); s(28, "E", 54); s(35, "E", 67); s(37, "E", 68); s(38, "E", 69); s(43, "E", 74); s(45, "E", 76); s(46, "E", 76); s(47, "E", 88); s(48, "E", 89); s(50, "E", 90); s(51, "E", 90); s(56, "E", 103); s(58, "E", 105); s(65, "E", 108); s(72, "E", 126); s(78, "E", 135); s(80, "E", 137); s(94, "E", 90); s(95, "E", 90); s(96, "E", 144); s(97, "E", 144); s(99, "E", 157); s(100, "E", 158); s(101, "E", 159); s(102, "E", 159); s(106, "E", 108); s(111, "E", 175); s(113, "E", 177); s(129, "E", 186); s(130, "E", 186); s(131, "E", 198); s(132, "E", 199); s(133, "E", 76); s(134, "E", 76); s(138, "E", 108); s(140, "E", 186); s(141, "E", 186); s(146, "E", 213); s(148, "E", 215); s(156, "E", 108); s(162, "E", 159); s(163, "E", 159); s(167, "E", 224); s(168, "E", 224); s(169, "E", 236); s(170, "E", 237); s(171, "E", 238); s(172, "E", 238); s(173, "E", 241); s(178, "E", 108); s(183, "E", 255); s(188, "E", 260); s(190, "E", 262); s(202, "E", 76); s(203, "E", 76); s(209, "E", 269); s(210, "E", 270); s(211, "E", 144); s(212, "E", 144); s(216, "E", 108); s(222, "E", 108); s(226, "E", 285); s(228, "E", 287); s(242, "E", 238); s(243, "E", 238); s(249, "E", 296); s(257, "E", 303); s(258, "E", 304); s(259, "E", 305); s(263, "E", 108); s(267, "E", 108); s(273, "E", 144); s(274, "E", 144); s(281, "E", 318); s(282, "E", 319); s(283, "E", 224); s(284, "E", 224); s(288, "E", 108); s(292, "E", 108); s(295, "E", 330); s(297, "E", 332); s(300, "E", 334); s(306, "E", 186); s(307, "E", 186); s(315, "E", 108); s(322, "E", 224); s(323, "E", 224); s(329, "E", 349); s(339, "E", 108); s(346, "E", 108); s(14, "T", 25); s(23, "T", 25); s(26, "T", 53); s(28, "T", 55); s(35, "T", 55); s(37, "T", 25); s(38, "T", 55); s(43, "T", 25); s(45, "T", 77); s(46, "T", 87); s(47, "T", 53); s(48, "T", 53); s(50, "T", 91); s(51, "T", 91); s(56, "T", 104); s(58, "T", 55); s(65, "T", 109); s(72, "T", 25); s(78, "T", 136); s(80, "T", 55); s(94, "T", 142); s(95, "T", 143); s(96, "T", 145); s(97, "T", 155); s(99, "T", 104); s(100, "T", 104); s(101, "T", 91); s(102, "T", 91); s(106, "T", 109); s(111, "T", 176); s(113, "T", 55); s(129, "T", 187); s(130, "T", 197); s(131, "T", 136); s(132, "T", 136); s(133, "T", 91); s(134, "T", 91); s(138, "T", 109); s(140, "T", 91); s(141, "T", 91); s(146, "T", 214); s(148, "T", 55); s(156, "T", 109); s(162, "T", 220); s(163, "T", 221); s(167, "T", 225); s(168, "T", 235); s(169, "T", 176); s(170, "T", 176); s(171, "T", 91); s(172, "T", 91); s(173, "T", 109); s(178, "T", 109); s(183, "T", 25); s(188, "T", 261); s(190, "T", 55); s(202, "T", 265); s(203, "T", 266); s(209, "T", 214); s(210, "T", 214); s(211, "T", 91); s(212, "T", 91); s(216, "T", 109); s(222, "T", 109); s(226, "T", 286); s(228, "T", 55); s(242, "T", 290); s(243, "T", 291); s(249, "T", 25); s(257, "T", 25); s(258, "T", 261); s(259, "T", 261); s(263, "T", 109); s(267, "T", 109); s(273, "T", 313); s(274, "T", 314); s(281, "T", 286); s(282, "T", 286); s(283, "T", 91); s(284, "T", 91); s(288, "T", 109); s(292, "T", 109); s(295, "T", 25); s(297, "T", 55); s(300, "T", 55); s(306, "T", 337); s(307, "T", 338); s(315, "T", 109); s(322, "T", 344); s(323, "T", 345); s(329, "T", 25); s(339, "T", 109); s(346, "T", 109); s(65, "EE", 110); s(106, "EE", 165); s(138, "EE", 205); s(156, "EE", 218); s(178, "EE", 245); s(216, "EE", 276); s(222, "EE", 279); s(263, "EE", 309); s(267, "EE", 311); s(288, "EE", 325); s(292, "EE", 327); s(315, "EE", 342); s(339, "EE", 355); s(346, "EE", 358); s(14, "G", 27); s(23, "G", 27); s(26, "G", 27); s(28, "G", 57); s(35, "G", 57); s(37, "G", 27); s(38, "G", 57); s(43, "G", 27); s(45, "G", 79); s(46, "G", 79); s(47, "G", 27); s(48, "G", 27); s(50, "G", 92); s(51, "G", 93); s(56, "G", 57); s(58, "G", 57); s(65, "G", 112); s(72, "G", 27); s(78, "G", 79); s(80, "G", 57); s(94, "G", 27); s(95, "G", 27); s(96, "G", 147); s(97, "G", 147); s(99, "G", 57); s(100, "G", 57); s(101, "G", 160); s(102, "G", 161); s(106, "G", 112); s(111, "G", 112); s(113, "G", 57); s(129, "G", 189); s(130, "G", 189); s(131, "G", 79); s(132, "G", 79); s(133, "G", 200); s(134, "G", 201); s(138, "G", 112); s(140, "G", 207); s(141, "G", 208); s(146, "G", 147); s(148, "G", 57); s(156, "G", 112); s(162, "G", 57); s(163, "G", 57); s(167, "G", 227); s(168, "G", 227); s(169, "G", 112); s(170, "G", 112); s(171, "G", 239); s(172, "G", 240); s(173, "G", 112); s(178, "G", 112); s(183, "G", 27); s(188, "G", 189); s(190, "G", 57); s(202, "G", 79); s(203, "G", 79); s(209, "G", 147); s(210, "G", 147); s(211, "G", 271); s(212, "G", 272); s(216, "G", 112); s(222, "G", 112); s(226, "G", 227); s(228, "G", 57); s(242, "G", 112); s(243, "G", 112); s(249, "G", 27); s(257, "G", 27); s(258, "G", 189); s(259, "G", 189); s(263, "G", 112); s(267, "G", 112); s(273, "G", 147); s(274, "G", 147); s(281, "G", 227); s(282, "G", 227); s(283, "G", 320); s(284, "G", 321); s(288, "G", 112); s(292, "G", 112); s(295, "G", 27); s(297, "G", 57); s(300, "G", 57); s(306, "G", 189); s(307, "G", 189); s(315, "G", 112); s(322, "G", 227); s(323, "G", 227); s(329, "G", 27); s(339, "G", 112); s(346, "G", 112); s(9, "SS", 16); s(21, "SS", 41); s(71, "SS", 125); s(127, "SS", 185); s(180, "SS", 251); s(182, "SS", 254); s(352, "SS", 362); s(361, "SS", 366); s(363, "SS", 368); s(372, "SS", 373); s(9, "S", 18); s(16, "S", 36); s(21, "S", 18); s(41, "S", 36); s(71, "S", 18); s(125, "S", 36); s(127, "S", 18); s(180, "S", 253); s(182, "S", 253); s(185, "S", 36); s(251, "S", 299); s(254, "S", 299); s(352, "S", 253); s(361, "S", 253); s(362, "S", 299); s(363, "S", 253); s(366, "S", 299); s(368, "S", 299); s(372, "S", 253); s(373, "S", 299); s(4, "XX", 8); s(19, "XX", 40); s(42, "XX", 73); s(0, "P", 2); s(0, "F", 3); s(2, "F", 5);
        return gotos;
    }

}
